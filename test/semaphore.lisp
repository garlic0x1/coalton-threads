(in-package #:coalton-threads/test)
(named-readtables:in-readtable coalton:coalton)

(define-test semaphore-signal-await ()
  (let ((sem (sem:new)))
    (thread:spawn
      (fn ()
        (sleep 1/2)
        (sem:signal sem 2)))
    (sem:await sem)
    (sem:await sem)
    (is True)))

(define-test semaphore-n-of-m ()
  (let ((sem (sem:new))
        (count (atomic:new 0)))
    (thread:spawn
      (fn ()
        (sleep 1)
        (sem:signal sem 4)))
    (for x in (range 1 5)
      (thread:spawn
        (fn ()
          (sem:await sem)
          (atomic:incf! count 1))))
    (sleep 1)
    (is (== 4 (atomic:read count)))
    (sem:signal sem 1)
    (sleep 1)
    (is (== 5 (atomic:read count)))))
